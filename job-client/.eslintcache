[{"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/index.js":"1","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/reportWebVitals.js":"2","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/App.js":"3","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/NavBar.js":"4","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/JobList.js":"5","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/Job.js":"6","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/Pagination.js":"7","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/services/JobService.js":"8","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/http-common.js":"9"},{"size":544,"mtime":1607335022140,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1607305020237,"results":"12","hashOfConfig":"11"},{"size":764,"mtime":1613005697637,"results":"13","hashOfConfig":"11"},{"size":1451,"mtime":1607407882797,"results":"14","hashOfConfig":"11"},{"size":3630,"mtime":1613005013092,"results":"15","hashOfConfig":"11"},{"size":4899,"mtime":1607409051871,"results":"16","hashOfConfig":"11"},{"size":701,"mtime":1607319463878,"results":"17","hashOfConfig":"11"},{"size":717,"mtime":1613005108956,"results":"18","hashOfConfig":"11"},{"size":176,"mtime":1612987862754,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"exyl27",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/index.js",[],["40","41"],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/reportWebVitals.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/App.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/NavBar.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/JobList.js",["42"],"import React, { useEffect, useState } from 'react';\nimport JobServices from '../services/JobService';\nimport { Button, Table, Spinner } from 'react-bootstrap';\nimport { Link, useLocation } from 'react-router-dom';\nimport PaginationPage from '../components/Pagination';\nimport moment from 'moment';\n\nfunction JobList() {\n  const [jobs, setJobs] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [jobsPerPage, setJobsPerPage] = useState(10);\n  const indexOfLastJob = currentPage * jobsPerPage;\n  const indexOfFirstJob = indexOfLastJob - jobsPerPage;\n  const currentJobs = jobs.slice(indexOfFirstJob, indexOfLastJob);\n  const { search } = useLocation();\n  const searchParams = new URLSearchParams(search);\n  const searchString = searchParams.get('searchString');\n\n  //initial Render\n  useEffect(() => {\n    getFetchList();\n  }, []);\n\n  useEffect(() => {\n    if(searchString == null || searchString.trim()===''){\n      getFetchList();\n    } else {\n      getFilterJobs(searchString);\n    }\n  },[searchString]);\n\n\n  const getFetchList = () => {\n    setIsLoading(true);\n    JobServices.getAllJobs()\n      .then((res) => {\n        setIsLoading(false);\n        setJobs(res.data);\n        console.log(res.data, \">>>>>>DATA\")\n      })\n      .catch((err) => {\n        console.log('Fetch List Error: ', err);\n      });\n  };\n\n  const getFilterJobs = (filterString) => {\n    JobServices.getFilteredJobs(filterString)\n      .then((res) => {\n        setJobs(res.data);\n      })\n      .catch((error) => {\n        console.log('Filter Fetch Failed: ', error);\n      });\n  };\n\n  const renderColumns = () => {\n    const columns = [\n      'Job Title',\n      'Company',\n      'Level',\n      'Occupancy',\n      'Apply Due Date',\n      'Action',\n    ];\n    return columns.map((key, index) => {\n      return <th key={index}>{key}</th>;\n    });\n  };\n\n  const onDeleteJob = (event) => {\n    JobServices.deleteJob(event.target.id)\n      .then(res => {\n        console.log('Delete Fetch Complete: ', res);\n        getFetchList();\n      })\n      .catch(err=> {\n        console.log('Delete Fetch Failure: ', err);\n      })\n  }\n\n  const renderBody = () => {\n    return currentJobs.map(job => {\n      return (\n        <tr key={job._id}>\n          <td>{job.job_title}</td>\n          <td>{job.company}</td>\n          <td>{job.level}</td>\n          <td>{job.occupancy}</td>\n          <td>{moment(job.due_date).format('YYYY-MM-DD')}</td>\n          <td style={{ display: 'flex', justifyContent: 'center' }}>\n            <Link to={`/edit/${job._id}`}>\n              <Button style={{ margin: '0.5rem' }}>Edit</Button>\n            </Link>\n            <Button\n              style={{ margin: '0.5rem' }}\n              variant='danger'\n              id={job._id}\n                onClick={onDeleteJob}\n            >\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  };\n\n  const paginate = (pageNumber) => {\n    setCurrentPage(pageNumber)\n  }\n\n  return (\n    <div>\n      {isLoading ? (\n        <Spinner animation='border' role='status'>\n          <span className='sr-only'>Loading...</span>\n        </Spinner>\n      ) : (\n        <>\n          <h1 id='listTitle'>Job List</h1>\n          <Table striped bordered hover>\n            <thead>\n              <tr>{renderColumns()}</tr>\n            </thead>\n            <tbody>{jobs && renderBody()}</tbody>\n          </Table>\n          <PaginationPage jobsPerPage={jobsPerPage} totalJobs={jobs.length} paginate={paginate} currentPage={currentPage}/>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default JobList;\n","/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/Job.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/components/Pagination.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/services/JobService.js",[],"/Users/jasonshin/Desktop/School_Project/Adv_Web_Programming/FinalProject/JeaminShin-CSIS3380-Project/job-client/src/http-common.js",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":12,"column":23,"nodeType":"49","messageId":"50","endLine":12,"endColumn":37},"no-native-reassign",["51"],"no-negated-in-lhs",["52"],"no-unused-vars","'setJobsPerPage' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]